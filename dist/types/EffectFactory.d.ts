export type EffectFactory = Array<{
	id: number;
	idCN: string;
	mod: string;
	startRotation?: number;
	randomRotation?: number;
	isLoop?: boolean;
	isNeedRotate?: boolean;
	isCountStateY?: boolean;
	isSortOrder?: boolean;
	sortOrder?: string;
	isTurn?: boolean;
	resUrl?: string;
	aniName?: string;
	aniTime_SN?: number;
	totalFrame?: number;
	frameChanged?: boolean;
	isBindAction?: boolean;
	isFollow?: boolean;
	offsetX?: number;
	offsetY?: number;
	scaleX?: number;
	scaleY?: number;
	isInformalData?: boolean;
	isCantPauseByEffectPause?: boolean;
	randomOffsetX?: number;
	randomOffsetY?: number;
	randomScaleX?: number;
	randomScaleY?: number;
	isUI?: boolean;
	centred?: boolean;
	isCardTotalEffect?: boolean;
	loopFrame?: number;
	useAdditive?: boolean;
	startFrame?: number;
	scaleFrame?: number;
	isFollowByFootPoint?: boolean;
	isChangeColor?: boolean;
	r?: number;
	g?: number;
	b?: number;
	a?: number;
	isChangeAlpha?: boolean;
	startFrameAlpha?: number;
	endFrameAlpha?: number;
	startAlpha?: number;
	endAlpha?: number;
	isChangeScale?: boolean;
	startFrameScale?: number;
	endFrameScale?: number;
	startScaleX?: number;
	endScaleX?: number;
	startScaleY?: number;
	endScaleY?: number;
	isPositionTween?: boolean;
	startFramePositionTween?: number;
	endFramePositionTween?: number;
	startSpeedX?: number;
	randomSpeedX?: number;
	startSpeedY?: number;
	randomSpeedY?: number;
	isRotationTween?: boolean;
	startFrameRotationTween?: number;
	endFrameRotationTween?: number;
	startRotationSpeed?: number;
	randomRotationSpeed?: number;
	scaleZ?: number;
	randomScaleZ?: number;
	isCustomOrder?: boolean;
	customSortOrder?: number;
	duration?: number;
	prefabUrl?: string;
	materialUrl?: string;
	redAniName?: string;
	yellowAniName?: string;
	blueAniName?: string;
	greenAniName?: string;
	purpleAniName?: string;
	excuteDurationFrame?: number;
	isGlobalDuration?: boolean;
	isUnitDuration?: boolean;
	axis?: string;
	amplitude?: number;
	time?: number;
	maxScale_SN?: number;
	minScale_SN?: number;
	effectList?: Array<{
		a?: number;
		b?: number;
		delayFrame?: number;
		effectId: number;
		endAlpha?: number;
		endFrameAlpha?: number;
		endFramePositionTween?: number;
		endFrameRotationTween?: number;
		endFrameScale?: number;
		endScaleX?: number;
		endScaleY?: number;
		g?: number;
		isChangeAlpha?: boolean;
		isChangeColor?: boolean;
		isChangeScale?: boolean;
		isPositionTween?: boolean;
		isRotationTween?: boolean;
		offsetX?: number;
		offsetY?: number;
		r?: number;
		randomOffsetX?: number;
		randomOffsetY?: number;
		randomRotation?: number;
		randomRotationSpeed?: number;
		randomScaleX?: number;
		randomScaleY?: number;
		randomSpeedX?: number;
		randomSpeedY?: number;
		scaleFrame?: number;
		scaleX?: number;
		scaleY?: number;
		startAlpha?: number;
		startFrameAlpha?: number;
		startFramePositionTween?: number;
		startFrameRotationTween?: number;
		startFrameScale?: number;
		startRotation?: number;
		startRotationSpeed?: number;
		startScaleX?: number;
		startScaleY?: number;
		startSpeedX?: number;
		startSpeedY?: number;
	}>;
	delayFrame?: number;
	playTime?: number;
	maskColorR?: number;
	maskColorG?: number;
	maskColorB?: number;
	textureFade?: number;
	alpha?: number;
	shaderPath?: string;
	isUIShake?: boolean;
	fadeInFrame?: number;
	fadeOutFrame?: number;
	xPerFrame?: number;
	eularX?: number;
	eularY?: number;
	eularZ?: number;
	offsetZ?: number;
	effectId?: number;
	isHorizontal?: boolean;
	radiusVertical?: number;
	radiusHorizontal?: number;
	intervalFrame?: number;
	pathList?: Array<{
		resUrl: string;
	}>;
	isOnlyX?: boolean;
	isOnlyY?: boolean;
	isOnlyZ?: boolean;
	videoUrl?: string;
	videoOffsetX?: number;
	videoOffsetY?: number;
	selfAdaptive?: boolean;
	isPauseAnimator?: boolean;
	strength?: number;
	velocity?: number;
	keepFrameAfterHit?: number;
	soundId?: number;
	isEnvShake?: boolean;
	shakeList?: Array<{
		shakeX?: number;
		shakeY?: number;
		shakeZ?: number;
	}>;
	headNodeName?: string;
	skillNameNodeName?: string;
	bgSpineNodeName?: string;
	redAction?: string;
	greenAction?: string;
	blueAction?: string;
	yellowAction?: string;
	purpleAction?: string;
	blackAction?: string;
}>