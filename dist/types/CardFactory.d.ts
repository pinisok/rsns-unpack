export type CardFactory = Array<{
	id: number;
	idCN: string;
	mod: string;
	isInformalData: boolean;
	name: string;
	isCutIn?: boolean;
	isNoCD: boolean;
	isUseInHand: boolean;
	isNotDiscard?: boolean;
	iconPath: string;
	backPath: string;
	roleImgPath: string;
	color: string;
	cardType: string;
	sameCardGroupId: number;
	actionId?: number;
	cost_SN: number;
	inhandBuffId: number;
	inhandOverBuffId: number;
	startBuffId: number;
	discardBuffId: number;
	discardBySkillBuffId?: number;
	banishBuffId: number;
	atkAreaType: string;
	atkAreaColor: string;
	targetColor: string;
	disappearEffectId: number;
	appearEffectId: number;
	createEffectId: number;
	destroyEffectId?: number;
	createTweenDelay?: number;
	isCostX: boolean;
	tagList: Array<{
		tagId: number;
	}>;
	tagOutsideList: Array<{
		tagId: number;
	}>;
	deriveCardList: any[];
	cardAIActionList?: Array<{
		actionId: number;
		conditionId: number;
		weight: number;
	}>;
	distance_SN?: number;
	radius_SN?: number;
	isUseTargetFilter?: boolean;
	targetType?: string;
	targetTagList?: any[];
	halfWidth_SN?: number;
	attributeType?: string;
	condition?: string;
	numberType?: string;
	number_SN?: number;
	buffTypeFO?: number;
	buffFO?: number;
	buffJudgeType?: string;
	buffLevel?: number;
	filterStance?: string;
	filterPosition?: string;
	isAimSelf?: boolean;
	targetCount?: number;
	tagType?: string;
	chargeSkillId?: number;
	chargeTotal?: number;
	currentCharge?: number;
}>